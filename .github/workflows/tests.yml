name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DB_CONNECTION: pgsql
  DB_DATABASE: ${{ github.repository_owner }}
  DB_USERNAME: ${{ github.repository_owner }}
  DB_PASSWORD: secret

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      composer-cache: ${{ steps.environments.outputs.composer-cache }}
      should-reports: ${{ steps.environments.outputs.should-reports }}
      target-branch: ${{ steps.environments.outputs.target-branch }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        # env:
        #   GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          php-version: 8.2
          extensions: curl, dom, intl, libxml, mbstring, pcntl, ssh2, xml, zip
          tools: composer:v2

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Environment
        id: environments
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          echo "target-branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          echo "composer-cache=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          echo "should-reports=$([[ -n \"$CC_TEST_REPORTER_ID\" ]] && echo '1')" >> $GITHUB_OUTPUT

      - name: Prepare Composer Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.environments.outputs.composer-cache }}
          key: php-8.2-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: php-8.2-composer-

      - name: Install dependencies
        run: |
          composer update --prefer-dist --no-interaction --no-progress --ansi
          npm ci

      - name: Build frontend
        env:
          APP_DEBUG: true
          APP_NAME: ${{ vars.APP_NAME }}
          # SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          # SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          # SENTRY_ORG: ${{ github.repository_owner }}
          # SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
        run: |
          npm run build

      - name: Store assets
        uses: actions/upload-artifact@v4
        with:
          name: assets-build
          path: |
            public/build
            public/.gitignore

  units:
    name: Units on PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    needs: prepare

    env:
      COLUMNS: 120

    services:
      pgsql:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd=pg_isready
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        php: [8.2]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        # env:
        #   GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          php-version: ${{ matrix.php }}
          extensions: bcmath, curl, dom, exif, gd, intl, iconv, imagick, libxml, mbstring, pcntl, pdo, pdo_pgsql, pdo, xml, zip
          coverage: xdebug

      - name: Download assets
        id: download
        uses: actions/download-artifact@v4
        with:
          name: assets-build
          path: public

      - name: Prepare Composer Cache
        uses: actions/cache@v4
        with:
          path: ${{ needs.prepare.outputs.composer-cache }}
          key: php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: php-${{ matrix.php }}-composer-

      - name: Install dependencies
        run: |
          composer update --prefer-dist --no-interaction --no-progress --ansi
          cp .github/.env.example .env
          php artisan key:generate

      - name: Run tests
        run: php artisan test --ansi --coverage
